rules_version = '2';
service cloud.firestore {
  match /databases/{database}/documents {
    // Helper functions
    function isAuthenticated() {
      return request.auth != null;
    }

    function isAdmin() {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.isAdmin == true;
    }

    function belongsToUser(userId) {
      return isAuthenticated() && request.auth.uid == userId;
    }

    function belongsToOrg(orgId) {
      return isAuthenticated() && 
        get(/databases/$(database)/documents/users/$(request.auth.uid)).data.organization == orgId;
    }

    // User profiles
    match /users/{userId} {
      allow read: if isAuthenticated();
      allow create: if belongsToUser(userId);
      allow update: if belongsToUser(userId) || isAdmin();
      allow delete: if isAdmin();
    }
    
    // Meetings
    match /meetings/{meetingId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAdmin();
    }
    
    // Funds
    match /funds/{fundId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAdmin();
    }
    
    // Committee
    match /committee/{memberId} {
      allow read: if isAuthenticated();
      allow create, update, delete: if isAdmin();
    }
  }
} 